name: 'Generate values.yaml'
inputs:
  APPS_ARO_CERTIFICATE:
    description: "Certificado para el dominio de apps en ARO"
    required: true
  APPS_ARO_CA_CERTIFICATE:
    description: "Certificado de la CA"
    required: true
  APPS_ARO_KEY_CERTIFICATE:
    description: "Certificado ARO Key"
    required: true
  GITHUB_HELMREPO_TOKEN:
    description: "Token para descargar el codigo de templates HELM"
    required: true
  appName:
    description: "Nombre de la aplicacion (dentro del proyecto)"
    required: true
    default: orleans-grain
  namespace:
    description: "nombre de namespaces"
    required: false
    default: ""
  clusterFqdn:
     description: "FQDN para pasarle a helm"
     required: true
  fileValuesPath:
    description: "path archivo de values.yaml"
    required: true
runs:
  using: "composite"
  steps:
    - run: echo '🎁Generate values.yaml'
      shell: bash

    - name: checkout codigo
      uses: actions/checkout@v3.5.0 #actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Copy values.yaml
      shell: bash
      run: |-
          ls ../
          cp ${{ inputs.fileValuesPath }} ../values.yaml

    - name: Checkout code helm templates
      uses: actions/checkout@v3.5.0
      with:
        repository: infrastructure-services/poc-orleans
        ref: main
        token: ${{ inputs.GITHUB_HELMREPO_TOKEN }}
    
    - name: Restore values.yaml
      shell: bash
      run: cp ../values.yaml values.yaml
    
    - name: Helm customizer le agregan valores al values
      shell: bash
      run: |-
        echo -e 'cluster:\n  fqdn: ${{ inputs.clusterFqdn}}' >> values.yaml
        ls
        echo 'namespace: ${{inputs.namespace}}' >> values.yaml
        echo 'appname: ${{inputs.appName}}' >> values.yaml
        echo 'caCertificate: |' >> values.yaml
        echo -e "${{inputs.APPS_ARO_CA_CERTIFICATE}}" | sed 's/^/    /' >> values.yaml
        echo 'certificate: |' >> values.yaml
        echo -e "${{inputs.APPS_ARO_CERTIFICATE}}" | sed 's/^/    /' >> values.yaml
        echo 'key: |' >> values.yaml
        echo -e "${{inputs.APPS_ARO_KEY_CERTIFICATE}}" |  sed 's/^/    /' >> values.yaml
        echo 'name: ${{inputs.TeamProject}}-${{inputs.appName}}' >> Chart.yaml
    
    - name: Archive values yaml
      uses: actions/upload-artifact@v3
      with:
        name: ${{inputs.namespace}}
        path: |
          values.yaml
          Chart.yaml
          templates/


