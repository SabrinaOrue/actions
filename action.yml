name: 'Restart Service'

inputs:
  appName:
    description: "Nombre de la aplicacion (dentro del proyecto)"
    required: true
  restartMotive:
    description: "Motivo del Restart"
    required: true
  ARGO_USERNAME:
    description: "usuario de ARgocd"
    required: true
  ARGO_PASSWORD:
    description: "pass de ARgocd"
    required: true
  ARGO_URL:
    description: "url de ARgocd"
    required: true
  projectName:
    description: "nombre de namespaces"
    required: true
    default: ""
  environmentName:
    description: "Ambiente"
    required: true
    default: ""
  instance:
    description: 'Instancia (Solo el sufijo)'
    required: true
runs:
  using: "composite"
  steps:
    - name: Start
      shell: bash
      run: |-
        echo "Comenzando a reiniciar el servicio instancia: ${{ inputs.instance }}."
        echo "----------------------------------------"
        echo ::notice::Motivo: ${{ inputs.restartMotive }}
        echo "----------------------------------------"
    - name: ArgoCD Login
      shell: bash
      run: |-
        echo "Login a ArgoCD"
        argocd login --username ${{ inputs.ARGO_USERNAME }} --password ${{ inputs.ARGO_PASSWORD }} --insecure ${{inputs.ARGO_URL}} --grpc-web
    - name: Restart Process
      shell: bash
      run: |-
        echo "Restarting Service"
        argocd app actions run ${{ inputs.projectName }}-${{ inputs.appName }}-${{ inputs.instance }}-${{ inputs.environmentName }} restart --kind Deployment
    - name: Wait
      shell: bash
      run: |-
        echo "Esperando que se estabilice"
        echo "----------------------------------------"
        argocd app wait ${{ inputs.projectName }}-${{ inputs.appName }}-${{ inputs.instance }}-${{ inputs.environmentName }} --health --operation --timeout 30
    - name: End
      shell: bash
      run: |-
        echo "El servicio o app ha sido reiniciado"
        echo "----------------------------------------"
