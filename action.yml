name: 'Generate values.yaml'
description: action to generate values
inputs:
  GITHUB_HELMREPO_TOKEN:
    description: "Token para descargar el codigo de templates HELM"
    required: true
  helmRepo:
    description: "Repositorio de helm"
    required: false
    default: "infrastructure-services/poc-orleans"
  helmRepoRef:
    description: "Ref del repositorio de Helm"
    required: false
    default: "main"
  appName:
    description: "Nombre de la aplicacion (dentro del proyecto)"
    required: true
    default: orleans-grain
  appVersion:
    description: "Version app"
    required: true
    default: orleans-grain
  namespace:
    description: "nombre de namespaces"
    required: false
    default: ""
  fileValuesPath:
    description: "path archivo de values.yaml"
    required: true
  teamProject:
    description: "Nombre del proyecto/equipo"
    required: true
runs:
  using: "composite"
  steps:
    - run: echo '🎁Generate values.yaml'
      shell: bash

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.12.3 #Helm 13 tiene un bug
        
    - name: checkout codigo
      uses: actions/checkout@v3.5.0 #actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Copy values.yaml
      shell: bash
      run: |-
          ls -la
          shopt -s dotglob
          cp ${{ inputs.fileValuesPath }} pythonChart/values.yaml
          sed -i "s/tag: \".*\"/tag: \"${{ inputs.appVersion }}\"/" pythonChart/values.yaml

    # - name: Checkout code helm templates
    #   uses: actions/checkout@v3.5.0
    #   with:
    #     repository: ${{ inputs.helmRepo }}
    #     ref: ${{ inputs.helmRepoRef }}
    #     token: ${{ inputs.GITHUB_HELMREPO_TOKEN }}
    
    # - name: Restore values.yaml
    #   shell: bash
    #   run: cp ../values.yaml values.yaml
    
    # - name: Helm customizer le agregan valores al values
    #   shell: bash
    #   run: |-
    #     echo -e 'cluster:\n  fqdn: ${{ inputs.clusterFqdn}}' >> values.yaml
    #     ls
    #     echo 'namespace: ${{inputs.namespace}}' >> values.yaml
    #     echo 'appname: ${{inputs.appName}}' >> values.yaml
    #     echo 'name: ${{inputs.teamProject}}-${{inputs.appName}}' >> Chart.yaml
        
    # - name: show values
    #   shell: bash
    #   run: cat values.yaml

    # - name: show Chart
    #   shell: bash
    #   run: cat Chart.yaml

    - name: Archive values yaml
      uses: actions/upload-artifact@v3
      with:
        name: ${{inputs.namespace}}
        path: |
          pythonChart/values.yaml
          pythonChart/Chart.yaml
          pythonChart/templates/
